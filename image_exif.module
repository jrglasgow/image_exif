<?php

/**
 * @file
 *
 * Ensure EXIF data from original image exists in derivitive images
 *
 * basically we duplicate the image_gd image toolkit (or rather reuse the
 * toolkit's functions) but in the save we copy exif data over before we finish.
 */

/**
 * Implements hook_libraries_info().
 */
function image_exif_libraries_info() {
  $libraries = array();

  $libraries['pel'] = array(
    'name'              => 'PHP EXIF Library',
    'vendor url'        => 'http://lsolesen.github.io/pel/',
    'download url'      => 'http://github.com/lsolesen/pel/tarball/master',
    'version arguments' => array(
      'file'      => 'NEWS', // Could be any file with version info
      'pattern'   => '/PEL Version ([0-9a-zA-Z\.-]+)/',
      'lines'     => 20,
    ),
    'files'             => array(
      'php'     => array(
        'src/Pel.php',
        'src/PelEntry.php',
        'src/PelEntryNumber.php',
        'src/PelEntryLong.php',
        'src/PelEntrySLong.php',
        'src/PelEntrySRational.php',
        'src/PelEntryUndefined.php',
        'src/PelEntryUserComment.php',
        'src/PelFormat.php',
        'src/PelJpeg.php',
        'src/PelException.php',
        'src/PelOverflowException.php',
        'src/PelConvert.php',
        'src/PelEntryAscii.php',
        'src/PelEntrySShort.php',
        'src/PelEntryVersion.php',
        'src/PelIfd.php',
        'src/PelJpegContent.php',
        'src/PelJpegComment.php',
        'src/PelTag.php',
        'src/PelDataWindow.php',
        'src/PelEntryByte.php',
        'src/PelEntryRational.php',
        'src/PelEntryShort.php',
        'src/PelEntryWindowsString.php',
        'src/PelIfdException.php',
        'src/PelTiff.php',
        'src/PelDataWindowOffsetException.php',
        'src/PelEntryCopyright.php',
        'src/PelEntrySByte.php',
        'src/PelEntryTime.php',
        'src/PelInvalidArgumentException.php',
        'src/PelJpegInvalidMarkerException.php',
        'src/PelEntryException.php',
        'src/PelUnexpectedFormatException.php',
        'src/PelDataWindowWindowException.php',
        'src/PelExif.php',
        'src/PelInvalidDataException.php',
        'src/PelJpegMarker.php',
        'src/PelWrongComponentCountException.php',
      ),
    )
  );

  return $libraries;
}

/**
 * Implements hook_image_toolkits().
 */
function image_exif_image_toolkits() {
  module_load_include('toolkit.inc', 'image_exif');
  $result = libraries_detect('pel');
  if (!$result || $result['error']) {
    if (user_access('administer site configuration')) {
      drupal_set_message(t('EXIF Metadata Retention cannot be used; the PHP EXIF Library cannot be found.'), 'error', FALSE);
    }
    watchdog('image_exif', 'EXIF Metadata Retention cannot be used; the PHP EXIF Library cannot be found.', array(), WATCHDOG_ERROR);

    $available = FALSE;
  }
  else {
    $available = TRUE;
  }

  return array(
    'exif' => array(
      'title'     => t('EXIF Metadata Retention'),
      'available' => $available,
    ),
  );
}

